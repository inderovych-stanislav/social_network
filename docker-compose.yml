version: '3.7'

services:
  gateway:
    image: nginx:latest
    env_file: .env
    depends_on:
      - web_app
      - api_app
    expose:
      - "80"
    volumes:
      - "./docker/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./docker/nginx/website.template:/etc/nginx/conf.d/website.template"
      - "./docker/nginx/api.template:/etc/nginx/conf.d/api.template"
      - "./docker/nginx/entrypoint.sh:/entrypoint.sh"
      - "./logs/nginx:/var/log/nginx"
    command: /entrypoint.sh

  web_app:
    image: node:15
    env_file: .env
    working_dir: /app
    volumes:
      - "./website/:/app"
    command: make npm_run

  api_app:
    image: social_network/php:7.4-fpm
    build:
      context: ./api/docker/
    env_file:
      - ./api/.env
    depends_on:
      - mysql
    volumes:
      - "./api/docker/php-fpm/php-dev.ini:/usr/local/etc/php/conf.d/app.ini"
      - "./api/docker/php-fpm/fpm-dev.conf:/usr/local/etc/php-fpm.d/www.conf"
      - "./api/:/app"
      - "./logs/api/:/app/storage/logs"

  mysql:
    image: mysql:5.7
    ports:
      - "127.0.0.1:3306:3306"
    expose:
     - 3306
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - "./docker/mysql/:/app/"
      - "./docker/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf"
      - "mysqldata:/var/lib/mysql/"

volumes:
  mysqldata: